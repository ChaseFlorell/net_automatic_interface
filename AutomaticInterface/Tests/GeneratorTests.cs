using AutomaticInterface;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Testing;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;
using AutomaticInterfaceAttribute;
using VerifyCS = Tests.CSharpSourceGeneratorVerifier<AutomaticInterface.AutomaticInterfaceGenerator>;

namespace Tests
{
    public class GeneratorTests
    {
        ImmutableArray<string> references = AppDomain.CurrentDomain.GetAssemblies()
                       .Where(assembly => !assembly.IsDynamic)
                       .Select(assembly => assembly.Location)
            .ToImmutableArray();


        

        private async Task RunTestAsync(string code, string expectedResult, List<DiagnosticResult> expectedDiagnostics)
        {
            var tester = new VerifyCS.Test
            {
                TestState =
                {
                    Sources = { code },
                    GeneratedSources =
                    {
                        (typeof(AutomaticInterfaceGenerator), "IDemoClass.cs", SourceText.From(expectedResult, Encoding.UTF8, SourceHashAlgorithm.Sha1)),
                    },
                },
            };

            tester.ReferenceAssemblies = ReferenceAssemblies.Net.Net50;
            tester.ReferenceAssemblies.AddAssemblies(references);
            tester.TestState.AdditionalReferences.Add(typeof(GenerateAutomaticInterfaceAttribute).Assembly);

            tester.ExpectedDiagnostics.AddRange(expectedDiagnostics);

            await tester.RunAsync();

        }

        [Fact]
        public async Task TestNoAttribute()
        {


            var code = @"
class C { }
";
            await new VerifyCS.Test
            {
                TestState =
                {
                    Sources = { code },
                },
            }.RunAsync();

        }


        [Fact]
        public async Task GeneratesEmptyInterface()
        {
            var code = @"
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GenerateAutomaticInterface]
    class DemoClass
    {
    }
}
";

            var expected = @"﻿//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GeneratedCode(""AutomaticInterface"", """")]
    public interface IDemoClass
    {
            }
}";

            await RunTestAsync(code, expected, new List<DiagnosticResult>() { new DiagnosticResult("AutomaticInterface", DiagnosticSeverity.Info) });
            Assert.True(true); // silence warnings, real test happens in the RunAsync() method
        }

        [Fact]
        public async Task GeneratesStringPropertyInterface()
        {
            var code = @"
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GenerateAutomaticInterface]
    class DemoClass
    {
        public string Hello { get; set; }
    }
}
";

            var expected = @"﻿//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GeneratedCode(""AutomaticInterface"", """")]
    public interface IDemoClass
    {
                string Hello { get; set; }
            }
}";
            await RunTestAsync(code, expected, new List<DiagnosticResult>() { new DiagnosticResult("AutomaticInterface", DiagnosticSeverity.Info) });
            Assert.True(true); // silence warnings, real test happens in the RunAsync() method
        }

        [Fact]
        public async Task GeneratesStringPropertySetOnlyInterface()
        {
            var code = @"
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GenerateAutomaticInterface]
    class DemoClass
    {
        private string x;
        public string Hello { set => x = value; }
    }
}
";

            var expected = @"﻿//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GeneratedCode(""AutomaticInterface"", """")]
    public interface IDemoClass
    {
                string Hello { set; }
            }
}";
            await RunTestAsync(code, expected, new List<DiagnosticResult>() { new DiagnosticResult("AutomaticInterface", DiagnosticSeverity.Info) });
            Assert.True(true); // silence warnings, real test happens in the RunAsync() method
        }

        [Fact]
        public async Task GeneratesStringPropertyGetOnlyInterface()
        {
            var code = @"
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GenerateAutomaticInterface]
    class DemoClass
    {
        private string x;
        public string Hello { get; }
    }
}
";

            var expected = @"﻿//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using AutomaticInterfaceAttribute;

namespace AutomaticInterfaceExample
{
    [GeneratedCode(""AutomaticInterface"", """")]
    public interface IDemoClass
    {
                string Hello { get; }
            }
}";
            await RunTestAsync(code, expected, new List<DiagnosticResult>() { new DiagnosticResult("AutomaticInterface", DiagnosticSeverity.Info) });
            Assert.True(true); // silence warnings, real test happens in the RunAsync() method
        }

        [Fact]
        public async Task AddsUsingsToInterfaceInterface()
        {
            var code = @"
using AutomaticInterfaceAttribute;
using System.IO;

namespace AutomaticInterfaceExample
{
    [GenerateAutomaticInterface]
    class DemoClass
    {
        public DirectoryInfo Hello { get; set; }
    }
}
";

            var expected = @"﻿//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using AutomaticInterfaceAttribute;
using System.IO;

namespace AutomaticInterfaceExample
{
    [GeneratedCode(""AutomaticInterface"", """")]
    public interface IDemoClass
    {
                System.IO.DirectoryInfo Hello { get; set; }
            }
}";
            await RunTestAsync(code, expected, new List<DiagnosticResult>() { new DiagnosticResult("AutomaticInterface", DiagnosticSeverity.Info) });
            Assert.True(true); // silence warnings, real test happens in the RunAsync() method
        }
    }
}
